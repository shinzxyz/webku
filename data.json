{
  "apis": [
    {
      "name": "YANDERE <!…¥s“ì·¥°>",
      "endpoint": "https://api.nekorinn.my.id/nsfw/yandere-random",
      "type": "media"
    },
    {
      "name": "REMINI",
      "endpoint": "https://api.siputzx.my.id/api/iloveimg/upscale?image=https://files.catbox.moe/3ktvfp.jpg",
      "type": "media"
    },
    {
      "name": "BRATVID",
      "endpoint": "https://api.nekorinn.my.id/maker/bratvid?text=yuda ganteng banget",
      "type": "media"
    },
    {
      "name": "FLUX IMAGE",
      "endpoint": "https://api.nekorinn.my.id/ai-img/flux-v4?text=buatlah+logo+yang+bernama+yoedzx",
      "type": "media"
    }
  ],
  "scripts": [
    {
      "name": "ELAINA MD",
      "link": "https://www.mediafire.com/file/9em77zaps9rzj3e/ELAINA+MD+FITUR+2000++"
    },
    {
      "name": "SC BUG - Pw: Lubyz Ganteng",
      "link": "https://www.mediafire.com/file/8a1dapbtz79u8xa/ùó•ùóÆùòÜùòáùóúùóªùó≥ùóπùóºùòÑ+ùó©ùüØ+ùó°ùóº+ùóòùóªùó∞.zip/file"
    },
    {
      "name": "SLASH MD V3",
      "link": "https://www.mediafire.com/file/4o117v5x3rgu5kv/Slash+MD+V3+New+update+"
    }
  ],
  "codes": [
    {
      "name": "BRAT",
      "code": "async function bratBackup(text, m, AnyaXD)\n    {\n      const urls = [`https://api.nekorinn.my.id/maker/brat-v2?text=${encodeURIComponent(text)}`, `https://www.ikyiizyy.my.id/api/tools/bratgenerator?text=${encodeURIComponent(text)}`, `https://www.laurine.site/api/generator/brat?text=${encodeURIComponent(text)}`, `https://jerofc.my.id/api/brat?text=${encodeURIComponent(text)}`, `https://api.crafters.biz.id/maker/brat?text=${encodeURIComponent(text)}`, `https://skyzxu-brat.hf.space/brat?text=${encodeURIComponent(text)}`, `https://vor-apis.biz.id/api/bratv1?q==${encodeURIComponent(text)}`, `https://api.ownblox.biz.id/api/brat?text=${encodeURIComponent(text)}`, `https://api.agungny.my.id/api/bratv1?q=${encodeURIComponent(text)}`, `https://api.siputzx.my.id/api/m/brat?text=${encodeURIComponent(text)}&isVideo=false&delay=500`, `https://clairity-nine.vercel.app/api/brat?text=${encodeURIComponent(text)}`, `https://apikey.moontech.web.id/api/tools/bratgenerator?text=${encodeURIComponent(text)}`];\n      for (const url of urls)\n      {\n        try\n        {\n          await AnyaXD.sendImageAsSticker(m.chat, url, m,\n          {\n            packname: global.packname,\n            author: global.author\n          });\n          return; // stop jika berhasil\n        }\n        catch (err)\n        {\n          console.error(`Gagal di API: ${url}`, err.message);\n        }\n      }\n      throw new Error('Semua API gagal');\n    }",
      "category": "function"
    },
    {
      "name": "BRAT",
      "code": "case 'brat':\n      {\n        if (!text) return mrh(example(`halo iki epep`));\n        reply(mess.wait);\n        bratBackup(text, m, AnyaXD).catch((e) =>\n        {\n          console.error(e.message);\n          reply(mess.error);\n        });\n      }\n      break;",
      "category": "case"
    },
    {
      "name": "WAIFU NEWS",
      "code": "import fetch from 'node-fetch'\n\nconst handler = async (m, { conn, text }) => {\n  try {\n    const res = await fetch('https://fgsi1-restapi.hf.space/api/information/mywaifulist/news')\n    const json = await res.json()\n\n    if (!json.status || !json.data) return m.reply('Gagal mengambil data berita.')\n\n    let newsList = json.data.map((item, index) => {\n      return `*${index + 1}. ${item.title}*\\n${item.description}\\n_Published: ${item.pubDate.split('T')[0]}_\\n[Read More](${item.url})`\n    }).join('\\n\\n')\n\n    await conn.sendMessage(m.chat, {\n      text: `*üì¢ MyWaifuList News*\\n\\n${newsList}`,\n      contextInfo: {\n        mentionedJid: [m.sender],\n        externalAdReply: {\n          title: 'Waifu News Center',\n          body: 'Latest news from MyWaifuList',\n          thumbnailUrl: 'https://files.catbox.moe/wv9mfj.jpg',\n          sourceUrl: 'https://fgsi1-restapi.hf.space',\n          mediaType: 1,\n          renderLargerThumbnail: true,\n          showAdAttribution: false\n        },\n        isForwarded: true,\n        forwardedNewsletterMessageInfo: {\n          newsletterName: \"MyWaifuList News - Fitur By Takashi\",\n          newsletterJid: `120363414329890254@newsletter`\n        }\n      }\n    }, { quoted: m })\n\n  } catch (e) {\n    m.reply(`Gagal mengambil berita: ${e}`)\n  }\n}\n\nhandler.help = ['waifunews']\nhandler.tags = ['anime']\nhandler.command = ['waifunews']\nhandler.limit = true\n\nexport default handler",
      "category": "plugin"
    },
    {
      "name": "REMOVE WM",
      "code": "case \"removewm\":\n      {\n        if (!rpgUser[id]) return loginInfo(m, nyaw)\n        \n        const\n        {\n          GoogleGenerativeAI\n        } = require(\"@google/generative-ai\");\n        const fs = require(\"fs\");\n        if (!/image/.test(mime)) return mrh(mess.img);\n        let defaultPrompt = \"Hapus watermark yang terdapat pada gambar. Perhatikan dengan teliti karena watermark bisa saja muncul di bagian atas, bawah, tengah, atau tersembunyi dengan ukuran kecil, transparan, atau blur. Hapus watermark tersebut secara menyeluruh tanpa mengurangi kualitas gambar asli dan tanpa mengubah elemen visual lainnya. Pastikan gambar tetap utuh, bersih, dan terlihat alami seolah tidak pernah memiliki watermark.\";\n        let promptText = text || defaultPrompt;\n        \n        if (!replyWait(m, mess.wait)) return;\n        try\n        {\n          const apiKeys = [\"AIzaSyD0lkGz6ZhKi_MHSSmJcCX3wXoDZhELPaQ\"];\n          const apiKey = apiKeys[Math.floor(Math.random() * apiKeys.length)];\n          const genAI = new GoogleGenerativeAI(apiKey);\n          // ambil buffer dari quoted atau langsung dari pesan (caption)\n          const imgData = m.quoted && /image/.test(m.quoted.mtype) ? await m.quoted.download() : await m.download();\n          const base64Image = imgData.toString(\"base64\");\n          const contents = [\n          {\n            text: promptText\n          },\n          {\n            inlineData:\n            {\n              mimeType: mime,\n              data: base64Image\n            }\n          }];\n          const model = genAI.getGenerativeModel(\n          {\n            model: \"gemini-2.0-flash-exp-image-generation\",\n            generationConfig:\n            {\n              responseModalities: [\"Text\", \"Image\"]\n            },\n          });\n          const response = await model.generateContent(contents);\n          let resultImage;\n          let resultText = \"\";\n          for (const part of response.response.candidates[0].content.parts)\n          {\n            if (part.text)\n            {\n              resultText += part.text;\n            }\n            else if (part.inlineData)\n            {\n              const imageData = part.inlineData.data;\n              resultImage = Buffer.from(imageData, \"base64\");\n            }\n          }\n          if (resultImage)\n          {\n            const tempPath = `./tmp/gemini_${Date.now()}.png`;\n            if (!fs.existsSync('./tmp')) fs.mkdirSync('./tmp');\n            fs.writeFileSync(tempPath, resultImage);\n            await AnyaXD.sendMessage(m.chat,\n            {\n              image:\n              {\n                url: tempPath\n              },\n              caption: `‚úÖ *berhasil Menghapus Watermark Pada Gambar*`\n            },\n            {\n              quoted: m\n            });\n            setTimeout(() =>\n            {\n              try\n              {\n                fs.unlinkSync(tempPath);\n              }\n              catch\n              {}\n            }, 30000);\n            await reaction(m.chat, \"‚úÖ\");\n          }\n          else\n          {\n            reply(mess.error);\n          }\n        }\n        catch (error)\n        {\n          console.error(error);\n          reply(`‚ùå Error: ${error.message}`);\n        }\n      }\n      break;",
      "category": "case"
    },
    {
      "name": "SPLAY",
      "code": "async function sPlaySP(text)\n    {\n      try\n      {\n        let spotifyUrl = text;\n        // Jika inputnya bukan link Spotify\n        if (!text.includes('spotify.com'))\n        {\n          try\n          {\n            // Cari pakai suraweb\n            const searchRes = await fetch(`https://api.suraweb.online/search/spotify?q=${encodeURIComponent(text)}`);\n            const searchJson = await searchRes.json();\n            if (searchJson.status && searchJson.tracks.length)\n            {\n              spotifyUrl = searchJson.tracks[0].link;\n            }\n            else\n            {\n              throw new Error('Search suraweb gagal');\n            }\n          }\n          catch (err1)\n          {\n            console.error('Suraweb search gagal:', err1.message);\n            try\n            {\n              // Cari pakai agatz\n              const agatzRes = await fetch(`https://api.agatz.xyz/api/spotify?message=${encodeURIComponent(text)}`);\n              const agatzJson = await agatzRes.json();\n              if (agatzJson.status === 200 && agatzJson.data.length)\n              {\n                spotifyUrl = agatzJson.data[0].externalUrl;\n              }\n              else\n              {\n                throw new Error('Search agatz gagal');\n              }\n            }\n            catch (err2)\n            {\n              console.error('Agatz search gagal:', err2.message);\n              try\n              {\n                // Cari pakai ryzendesu\n                const ryzenRes = await fetch(`https://api.ryzendesu.vip/api/search/spotify?query=${encodeURIComponent(text)}`);\n                const ryzenJson = await ryzenRes.json();\n                if (ryzenJson.tracks.length)\n                {\n                  spotifyUrl = ryzenJson.tracks[0].url;\n                }\n                else\n                {\n                  throw new Error('Search ryzendesu gagal');\n                }\n              }\n              catch (err3)\n              {\n                console.error('Ryzendesu search gagal:', err3.message);\n                try\n                {\n                  // Cari pakai official Spotify API\n                  const client_id = \"acc6302297e040aeb6e4ac1fbdfd62c3\";\n                  const client_secret = \"0e8439a1280a43aba9a5bc0a16f3f009\";\n                  const basic = Buffer.from(`${client_id}:${client_secret}`).toString(\"base64\");\n                  const tokenRes = await axios.post(\"https://accounts.spotify.com/api/token\", \"grant_type=client_credentials\",\n                  {\n                    headers:\n                    {\n                      Authorization: \"Basic \" + basic,\n                      \"Content-Type\": \"application/x-www-form-urlencoded\"\n                    }\n                  });\n                  const token = tokenRes.data.access_token;\n                  const searchSpotify = await axios.get(`https://api.spotify.com/v1/search?q=${encodeURIComponent(text)}&type=track&limit=1`,\n                  {\n                    headers:\n                    {\n                      Authorization: `Bearer ${token}`\n                    }\n                  });\n                  if (searchSpotify.data.tracks.items.length)\n                  {\n                    spotifyUrl = searchSpotify.data.tracks.items[0].external_urls.spotify;\n                  }\n                  else\n                  {\n                    throw new Error('Official Spotify search gagal');\n                  }\n                }\n                catch (err4)\n                {\n                  console.error('Official Spotify search gagal:', err4.message);\n                  throw new Error('‚ùå Gagal mencari lagu di semua API.');\n                }\n              }\n            }\n          }\n        }\n        // Download lagu\n        try\n        {\n          // Download pakai laurine\n          const dlRes = await fetch(`https://www.laurine.site/api/downloader/spotifydl?url=${encodeURIComponent(spotifyUrl)}`);\n          const dlJson = await dlRes.json();\n          if (dlJson.status)\n          {\n            const\n            {\n              title,\n              artist,\n              cover,\n              downloadUrl\n            } = dlJson.data;\n            return {\n              title,\n              artist,\n              image: cover,\n              audio: downloadUrl,\n              url: spotifyUrl\n            };\n          }\n          else\n          {\n            throw new Error('Laurine download gagal');\n          }\n        }\n        catch (err5)\n        {\n          console.error('Laurine download gagal:', err5.message);\n          try\n          {\n            // Download pakai agatz\n            const agatzDl = await fetch(`https://api.agatz.xyz/api/spotifydl?url=${encodeURIComponent(spotifyUrl)}`);\n            const agatzJson = await agatzDl.json();\n            if (agatzJson.status === 200)\n            {\n              const data = JSON.parse(agatzJson.data);\n              return {\n                title: data.judul,\n                artist: data.nama_channel,\n                image: data.gambar_kecil[0]?.url,\n                audio: data.url_audio_v1,\n                url: spotifyUrl\n              };\n            }\n            else\n            {\n              throw new Error('Agatz download gagal');\n            }\n          }\n          catch (err6)\n          {\n            console.error('Agatz download gagal:', err6.message);\n            try\n            {\n              // Download pakai caliphdev\n              const caliphAudio = `https://spotifyapi.caliphdev.com/api/download/track?url=${encodeURIComponent(spotifyUrl)}`;\n              return {\n                title: 'Unknown',\n                artist: 'Unknown',\n                image: '',\n                audio: caliphAudio,\n                url: spotifyUrl\n              };\n            }\n            catch (err7)\n            {\n              console.error('Caliphdev download gagal:', err7.message);\n              try\n              {\n                // Download pakai spotydown\n                const spotyRes = await axios.post(\"https://spotydown.media/api/download-track\",\n                {\n                  url: spotifyUrl\n                },\n                {\n                  headers:\n                  {\n                    \"Content-Type\": \"application/json\"\n                  }\n                });\n                if (spotyRes.data.file_url)\n                {\n                  return {\n                    title: 'Unknown',\n                    artist: 'Unknown',\n                    image: '',\n                    audio: spotyRes.data.file_url,\n                    url: spotifyUrl\n                  };\n                }\n                else\n                {\n                  throw new Error('Spotydown gagal');\n                }\n              }\n              catch (err8)\n              {\n                console.error('Spotydown download gagal:', err8.message);\n                throw new Error('‚ùå Semua API download gagal.');\n              }\n            }\n          }\n        }\n      }\n      catch (finalErr)\n      {\n        console.error('Fatal error:', finalErr.message);\n        throw finalErr;\n      }\n    }",
      "category": "function"
    }
  ],
  "music": "https://files.catbox.moe/cwsuz2.mp3"
}